server {
    listen 80;
    server_name localhost;
    
    # Перенаправление на HTTPS (раскомментировать для реального домена)
    # if ($host = example.com) {
    #     return 301 https://$host$request_uri;
    # }
    
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name localhost;
    
    # SSL настройки
    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    
    # Логирование
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    
    # Прокси к API приложению
    location /api/ {
        proxy_pass http://app:3000/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Таймауты
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # Мониторинг (с базовой аутентификацией)
    location /monitoring/ {
        auth_basic "Restricted Access";
        auth_basic_user_file /etc/nginx/.htpasswd;
        
        proxy_pass http://grafana:3000/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
    
    # Health check для балансировщика нагрузки
    location /health {
        proxy_pass http://app:3000/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        
        access_log off;
        # Кэширование ответов health-check
        proxy_cache_valid 200 10s;
    }
    
    # Защита от распространенных атак
    # Блокировка скрытых файлов
    location ~ /\. {
        deny all;
    }
    
    # Ограничение размера запроса
    client_max_body_size 10M;
    
    # Ограничение методов для документации
    location /api/docs {
        limit_except GET {
            deny all;
        }
        proxy_pass http://app:3000/docs;
    }
} 