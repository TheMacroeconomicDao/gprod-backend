version: '3.8'

services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: gprod_dev
    ports:
      - "5432:5432"
    volumes:
      - pgdata_dev:/var/lib/postgresql/data
    networks:
      - gp-network-dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - NODE_ENV=development
    command: sh /app/docker-entrypoint.sh
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/gprod_dev
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      db:
        condition: service_healthy
    networks:
      - gp-network-dev
    restart: unless-stopped

  # Дополнительные сервисы для разработки
  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    networks:
      - gp-network-dev
    depends_on:
      - db

  # Сервис для e2e-тестов
  e2e:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - NODE_ENV=test
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/gprod_dev
    networks:
      - gp-network-dev
    volumes:
      - .:/app
      - /app/node_modules
    command: npx jest --config ./test/jest-e2e.json --runInBand

volumes:
  pgdata_dev:

networks:
  gp-network-dev:
    driver: bridge 