version: '3.8'

# Упрощенный docker-compose для локальной разработки
# Для полной инфраструктуры используйте файлы из репозитория gybernaty-infra

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: gprod_dev
    ports:
      - "5432:5432"
    volumes:
      - pgdata_dev:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    command: pnpm start:dev
    ports:
      - "${PORT:-3008}:${PORT:-3008}"
    volumes:
      - .:/app
      - /app/node_modules
    env_file:
      - .env.${NODE_ENV:-development}
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=${PORT:-3008}
      - LOGGER_TEST_MODE=${LOGGER_TEST_MODE:-false}
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD:-postgres}@db:5432/gprod_dev
      - JWT_SECRET=${JWT_SECRET:-dev_jwt_secret_change_me_in_production}
      - DEBUG=${DEBUG:-false}
      - RUNNING_IN_DOCKER=true
    depends_on:
      db:
        condition: service_healthy

volumes:
  pgdata_dev:

# Для развертывания полной инфраструктуры, включая мониторинг и Nginx,
# используйте конфигурации из репозитория gybernaty-infra 