#!/bin/bash

# ===================================================
# üöÄ GPROD –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –∑–∞–ø—É—Å–∫
# ===================================================
# –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ —Å –≤—ã–±–æ—Ä–æ–º —Ä–µ–∂–∏–º–∞
#
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
#   ./automation/scripts/interactive-run.sh

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
WHITE='\033[1;37m'
BOLD='\033[1m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
print_header() {
  echo -e "\n${WHITE}${BOLD}$1${NC}\n"
}

print_success() {
  echo -e "${GREEN}‚úì $1${NC}"
}

print_error() {
  echo -e "${RED}‚úó $1${NC}"
}

print_info() {
  echo -e "${BLUE}‚Ñπ $1${NC}"
}

print_step() {
  echo -e "${PURPLE}‚Üí $1${NC}"
}

# –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(cd "$SCRIPT_DIR/../../" && pwd)"
RUN_SCRIPT="$PROJECT_ROOT/automation/run.sh"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–µ–Ω—é
show_menu() {
  print_header "üöÄ GPROD –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –∑–∞–ø—É—Å–∫"
  echo -e "${CYAN}–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–Ω—Ç—É—Ä:${NC}"
  echo -e "  ${YELLOW}1)${NC} Development (dev) - –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
  echo -e "  ${YELLOW}2)${NC} Staging (stage) - –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"
  echo -e "  ${YELLOW}3)${NC} Production (prod) - –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞"
  echo -e "  ${YELLOW}4)${NC} Reference - –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è"
  echo -e "\n${CYAN}–†–µ–∂–∏–º –∑–∞–ø—É—Å–∫–∞:${NC}"
  echo -e "  ${YELLOW}a)${NC} –û–±—ã—á–Ω—ã–π –∑–∞–ø—É—Å–∫ (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –æ–±—Ä–∞–∑—ã, –µ—Å–ª–∏ –µ—Å—Ç—å)"
  echo -e "  ${YELLOW}b)${NC} –° –ø–µ—Ä–µ—Å–±–æ—Ä–∫–æ–π (–ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤)"
  echo -e "\n${CYAN}–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏:${NC}"
  echo -e "  ${YELLOW}q)${NC} –í—ã—Ö–æ–¥"
  echo -e "\n${CYAN}–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏—é (–Ω–∞–ø—Ä–∏–º–µ—Ä, 1a –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ dev):${NC} "
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
run_project() {
  local env=$1
  local rebuild=$2
  
  if [ "$rebuild" = true ]; then
    print_step "–ó–∞–ø—É—Å–∫ $env —Å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –ø–µ—Ä–µ—Å–±–æ—Ä–∫–æ–π..."
    bash "$RUN_SCRIPT" run "$env" --rebuild
  else
    print_step "–ó–∞–ø—É—Å–∫ $env –≤ –æ–±—ã—á–Ω–æ–º —Ä–µ–∂–∏–º–µ..."
    bash "$RUN_SCRIPT" run "$env"
  fi
}

# –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–¥
show_menu
read -r choice

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç—É—Ä–∞
env=""
case ${choice:0:1} in
  1)
    env="dev"
    ;;
  2)
    env="stage"
    ;;
  3)
    env="prod"
    ;;
  4)
    env="reference"
    ;;
  q)
    print_info "–í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã"
    exit 0
    ;;
  *)
    print_error "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä –∫–æ–Ω—Ç—É—Ä–∞"
    exit 1
    ;;
esac

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ –∑–∞–ø—É—Å–∫–∞
rebuild=false
case ${choice:1:1} in
  a)
    rebuild=false
    ;;
  b)
    rebuild=true
    ;;
  *)
    print_error "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞ –∑–∞–ø—É—Å–∫–∞"
    exit 1
    ;;
esac

# –ó–∞–ø—É—Å–∫ –ø—Ä–æ–µ–∫—Ç–∞
run_project "$env" "$rebuild"
