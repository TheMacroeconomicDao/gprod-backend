#!/bin/bash

# ===================================================
# üõ†Ô∏è GPROD Common Library
# ===================================================
# –û–±—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ —É—Ç–∏–ª–∏—Ç—ã –¥–ª—è –≤—Å–µ—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏
#
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
#   source ./automation/lib/common-lib.sh

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
COMMON_GREEN='\033[0;32m'
COMMON_RED='\033[0;31m'
COMMON_YELLOW='\033[1;33m'
COMMON_BLUE='\033[0;34m'
COMMON_PURPLE='\033[0;35m'
COMMON_CYAN='\033[0;36m'
COMMON_WHITE='\033[1;37m'
COMMON_BOLD='\033[1m'
COMMON_BG_GREEN='\033[42m'
COMMON_BG_BLUE='\033[44m'
COMMON_BG_CYAN='\033[46m'
COMMON_BG_GRAY='\033[100m'
COMMON_NC='\033[0m' # No Color

# –°–∏–º–≤–æ–ª—ã –¥–ª—è –≤—ã–≤–æ–¥–∞
COMMON_CHECK_MARK="${COMMON_GREEN}‚úì${COMMON_NC}"
COMMON_CROSS_MARK="${COMMON_RED}‚úó${COMMON_NC}"
COMMON_ARROW="${COMMON_BLUE}‚Üí${COMMON_NC}"
COMMON_STAR="${COMMON_YELLOW}‚òÖ${COMMON_NC}"
COMMON_INFO="${COMMON_CYAN}‚Ñπ${COMMON_NC}"

# –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ü–≤–µ—Ç–∞ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Å–∫—Ä–∏–ø—Ç–∞—Ö
export COMMON_GREEN COMMON_RED COMMON_YELLOW COMMON_BLUE COMMON_PURPLE COMMON_CYAN
export COMMON_WHITE COMMON_BOLD COMMON_BG_GREEN COMMON_BG_BLUE COMMON_BG_CYAN COMMON_BG_GRAY COMMON_NC
export COMMON_CHECK_MARK COMMON_CROSS_MARK COMMON_ARROW COMMON_STAR COMMON_INFO

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
common_print_header() {
  echo -e "\n${COMMON_WHITE}${COMMON_BOLD}$1${COMMON_NC}\n"
}

common_print_subheader() {
  echo -e "\n${COMMON_CYAN}$1${COMMON_NC}"
}

common_print_success() {
  echo -e "${COMMON_CHECK_MARK} ${COMMON_GREEN}$1${COMMON_NC}"
}

common_print_error() {
  echo -e "${COMMON_CROSS_MARK} ${COMMON_RED}$1${COMMON_NC}"
}

common_print_warning() {
  echo -e "${COMMON_STAR} ${COMMON_YELLOW}$1${COMMON_NC}"
}

common_print_info() {
  echo -e "${COMMON_INFO} ${COMMON_BLUE}$1${COMMON_NC}"
}

common_print_step() {
  echo -e "${COMMON_ARROW} ${COMMON_PURPLE}$1${COMMON_NC}"
}

common_print_hr() {
  echo -e "${COMMON_CYAN}----------------------------------------${COMMON_NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è –∫–æ–º–∞–Ω–¥—ã
common_check_command() {
  local cmd=$1
  local install_msg=$2
  
  if ! command -v "$cmd" &> /dev/null; then
    common_print_error "–ö–æ–º–∞–Ω–¥–∞ '$cmd' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    if [ -n "$install_msg" ]; then
      common_print_info "$install_msg"
    fi
    return 1
  fi
  
  return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
common_detect_system() {
  if [[ "$(uname)" == "Darwin" ]]; then
    echo "macos"
  elif [[ "$(uname)" == "Linux" ]]; then
    echo "linux"
  else
    echo "unknown"
  fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è Docker
common_check_docker() {
  common_print_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Docker..."
  
  if ! common_check_command "docker" "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker: https://docs.docker.com/get-docker/"; then
    return 1
  fi
  
  if ! docker info &> /dev/null; then
    common_print_error "Docker –Ω–µ –∑–∞–ø—É—â–µ–Ω –∏–ª–∏ –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞"
    common_print_info "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Docker –∑–∞–ø—É—â–µ–Ω –∏ —É –≤–∞—Å –µ—Å—Ç—å –ø—Ä–∞–≤–∞ –Ω–∞ –µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ"
    return 1
  fi
  
  common_print_success "Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç"
  return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è pnpm
common_check_pnpm() {
  common_print_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è pnpm..."
  
  if ! common_check_command "pnpm" "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ pnpm: npm install -g pnpm"; then
    return 1
  fi
  
  common_print_success "pnpm —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
  return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è Node.js
common_check_node() {
  common_print_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Node.js..."
  
  if ! common_check_command "node" "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js: https://nodejs.org/"; then
    return 1
  fi
  
  local node_version=$(node -v | cut -d 'v' -f 2)
  local major_version=$(echo "$node_version" | cut -d '.' -f 1)
  
  if [ "$major_version" -lt 16 ]; then
    common_print_warning "–í–µ—Ä—Å–∏—è Node.js ($node_version) —É—Å—Ç–∞—Ä–µ–ª–∞. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Node.js 16 –∏–ª–∏ –≤—ã—à–µ."
  else
    common_print_success "Node.js $node_version —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
  fi
  
  return 0
}

# –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Å–∫—Ä–∏–ø—Ç–∞—Ö
export -f common_print_header common_print_subheader common_print_success common_print_error
export -f common_print_warning common_print_info common_print_step common_print_hr
export -f common_check_command common_detect_system common_check_docker common_check_pnpm common_check_node
