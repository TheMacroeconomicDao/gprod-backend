#!/bin/bash

# ===================================================
# üöÄ GPROD Docker Manager
# ===================================================
# –°–∫—Ä–∏–ø—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞–º–∏ –ø—Ä–æ–µ–∫—Ç–∞
#
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
#   ./docker/docker-manager.sh <env> <command> [options]
#
# –ö–æ–º–∞–Ω–¥—ã:
#   up        - –ó–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
#   down      - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
#   restart   - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
#   logs      - –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
#   status    - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
#
# –û–ø—Ü–∏–∏:
#   --build   - –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å –æ–±—Ä–∞–∑—ã –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
#   --volumes - –£–¥–∞–ª–∏—Ç—å —Ç–æ–º–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ
#
# –ü—Ä–∏–º–µ—Ä—ã:
#   ./docker/docker-manager.sh dev up
#   ./docker/docker-manager.sh prod up --build
#   ./docker/docker-manager.sh stage down --volumes

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
PROJECT_ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")" && cd .. && pwd)"

# –ü–æ–¥–∫–ª—é—á–∞–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
source "$PROJECT_ROOT/automation/lib/common-lib.sh"
source "$PROJECT_ROOT/automation/lib/env-lib.sh"
source "$PROJECT_ROOT/automation/lib/docker-lib.sh"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–ø—Ä–∞–≤–∫–∏
show_help() {
  common_print_header "üê≥ GPROD Docker Manager - –°–ø—Ä–∞–≤–∫–∞"
  echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./docker/docker-manager.sh <env> <command> [options]"
  echo ""
  echo "–û–∫—Ä—É–∂–µ–Ω–∏—è:"
  echo "  dev        - –û–∫—Ä—É–∂–µ–Ω–∏–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
  echo "  stage      - –û–∫—Ä—É–∂–µ–Ω–∏–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"
  echo "  prod       - –ü—Ä–æ–¥–∞–∫—à–Ω –æ–∫—Ä—É–∂–µ–Ω–∏–µ"
  echo "  reference  - –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ"
  echo ""
  echo "–ö–æ–º–∞–Ω–¥—ã:"
  echo "  up        - –ó–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
  echo "  down      - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
  echo "  restart   - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
  echo "  logs      - –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
  echo "  status    - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
  echo ""
  echo "–û–ø—Ü–∏–∏:"
  echo "  --build   - –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å –æ–±—Ä–∞–∑—ã –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ"
  echo "  --volumes - –£–¥–∞–ª–∏—Ç—å —Ç–æ–º–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ"
  echo "  --service=<name> - –£–∫–∞–∑–∞—Ç—å —Å–µ—Ä–≤–∏—Å –¥–ª—è –ª–æ–≥–æ–≤ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: app)"
  echo ""
  echo "–ü—Ä–∏–º–µ—Ä—ã:"
  echo "  ./docker/docker-manager.sh dev up"
  echo "  ./docker/docker-manager.sh prod up --build"
  echo "  ./docker/docker-manager.sh stage down --volumes"
  echo "  ./docker/docker-manager.sh dev logs --service=db"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
if [ $# -lt 2 ]; then
  show_help
  exit 1
fi

# –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
ENV=$1
COMMAND=$2
shift 2

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –æ–∫—Ä—É–∂–µ–Ω–∏—è
ENV=$(env_validate_env "$ENV")
if [ $? -ne 0 ]; then
  exit 1
fi

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
env_setup "$ENV" "$PROJECT_ROOT" "docker" true

# –ü–∞—Ä—Å–∏–Ω–≥ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –æ–ø—Ü–∏–π
BUILD=false
REMOVE_VOLUMES=false
SERVICE="app"
ADDITIONAL_PARAMS=""

for arg in "$@"; do
  case $arg in
    --build)
      BUILD=true
      ;;
    --volumes)
      REMOVE_VOLUMES=true
      ;;
    --service=*)
      SERVICE="${arg#*=}"
      ;;
    *)
      ADDITIONAL_PARAMS="$ADDITIONAL_PARAMS $arg"
      ;;
  esac
shift
done

# –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
case $COMMAND in
  up)
    docker_compose_up "$ENV" "$PROJECT_ROOT" "$BUILD" "$ADDITIONAL_PARAMS"
    ;;
  down)
    docker_compose_down "$ENV" "$PROJECT_ROOT" "$REMOVE_VOLUMES" "$ADDITIONAL_PARAMS"
    ;;
  restart)
    common_print_header "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç—É—Ä–∞ $(env_get_full_name $ENV)"
    docker_compose_down "$ENV" "$PROJECT_ROOT" false "$ADDITIONAL_PARAMS"
    docker_compose_up "$ENV" "$PROJECT_ROOT" "$BUILD" "$ADDITIONAL_PARAMS"
    ;;
  logs)
    docker_compose_logs "$ENV" "$PROJECT_ROOT" "$SERVICE" true "$ADDITIONAL_PARAMS"
    ;;
  status)
    docker_compose_status "$ENV" "$PROJECT_ROOT" "$ADDITIONAL_PARAMS"
    ;;
  *)
    common_print_error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $COMMAND"
    show_help
    exit 1
    ;;
esac

exit 0
