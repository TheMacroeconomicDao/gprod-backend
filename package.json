{
  "name": "gprod-new-backend",
  "version": "0.0.1",
  "description": "Backend for GProd project (NestJS, Prisma, PostgreSQL)",
  "author": "Gyber <gyber@example.com>",
  "private": true,
  "license": "AGPL-3.0",
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "NODE_ENV=development npm run start",
    "start:stage": "NODE_ENV=staging node dist/src/main.js",
    "start:prod": "NODE_ENV=production node dist/src/main.js",
    "docker:restart": "docker compose up --build --force-recreate -d",
    "docker:dev": "docker compose -f docker-compose.dev.yml up",
    "docker:dev:build": "docker compose -f docker-compose.dev.yml up --build",
    "docker:dev:stop": "docker compose -f docker-compose.dev.yml down",
    "docker:stage": "docker compose -f docker-compose.stage.yml up",
    "docker:stage:build": "docker compose -f docker-compose.stage.yml up --build",
    "docker:stage:stop": "docker compose -f docker-compose.stage.yml down",
    "docker:prod": "docker compose -f docker-compose.prod.yml up -d",
    "docker:prod:build": "docker compose -f docker-compose.prod.yml up --build -d",
    "docker:prod:stop": "docker compose -f docker-compose.prod.yml down",
    "docker:reference": "bash scripts/docker-reference.sh up",
    "docker:reference:down": "bash scripts/docker-reference.sh down",
    "docker:reference:restart": "bash scripts/docker-reference.sh restart",
    "docker:reference:logs": "bash scripts/docker-reference.sh logs",
    "docker:reference:build": "bash scripts/docker-reference.sh build",
    "env:switch": "bash scripts/env-switch.sh",
    "env:dev": "bash scripts/env-switch.sh dev",
    "env:stage": "bash scripts/env-switch.sh stage",
    "env:prod": "bash scripts/env-switch.sh prod",
    "env:switch:new": "bash scripts/env-switch-new.sh",
    "env:dev:new": "bash scripts/env-switch-new.sh dev",
    "env:stage:new": "bash scripts/env-switch-new.sh stage",
    "env:prod:new": "bash scripts/env-switch-new.sh prod",
    "env:setup": "bash scripts/setup-env-files.sh",
    "lint": "eslint \"{src,apps,libs,test}/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "test:e2e:local": "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/gprod NODE_ENV=test jest --config ./test/jest-e2e.json --runInBand",
    "test:e2e:ci": "BASE_URL=${BASE_URL:-http://app:3007} jest --config ./test/jest-e2e.json",
    "test:e2e:docker": "docker compose up --build e2e",
    "test:smart": "bash scripts/run-tests.sh",
    "test:smart:unit": "bash scripts/run-tests.sh unit",
    "test:smart:e2e": "bash scripts/run-tests.sh e2e",
    "test:setup": "bash scripts/setup-env-files.sh && cp .env-templates/.env.test .env.test",
    "docker:test:smart": "docker compose run --rm app /bin/sh /app/scripts/docker-smart-test.sh",
    "docker:test:smart:unit": "docker compose run --rm app /bin/sh /app/scripts/docker-smart-test.sh unit",
    "docker:test:smart:e2e": "docker compose run --rm app /bin/sh /app/scripts/docker-smart-test.sh e2e",
    "prisma:migrate:dev": "export DATABASE_URL=$(grep ^DATABASE_URL .env.development | cut -d '=' -f2-) && npx prisma migrate dev",
    "prisma:migrate:stage": "export DATABASE_URL=$(grep ^DATABASE_URL .env.staging | cut -d '=' -f2-) && npx prisma migrate deploy",
    "prisma:migrate:prod": "export DATABASE_URL=$(grep ^DATABASE_URL .env.production | cut -d '=' -f2-) && npx prisma migrate deploy",
    "prisma:studio:dev": "export DATABASE_URL=$(grep ^DATABASE_URL .env.development | cut -d '=' -f2-) && npx prisma studio",
    "prisma:studio:stage": "export DATABASE_URL=$(grep ^DATABASE_URL .env.staging | cut -d '=' -f2-) && npx prisma studio",
    "prisma:studio:prod": "export DATABASE_URL=$(grep ^DATABASE_URL .env.production | cut -d '=' -f2-) && npx prisma studio",
    "docker:prisma:migrate:dev": "docker compose -f docker-compose.dev.yml run --rm app npx prisma migrate dev",
    "docker:prisma:migrate:stage": "docker compose -f docker-compose.stage.yml run --rm app npx prisma migrate deploy",
    "docker:prisma:migrate:prod": "docker compose -f docker-compose.prod.yml run --rm app npx prisma migrate deploy",
    "docker:prisma:reference:migrate": "docker compose -f docker-compose.reference.yml run --rm app npx prisma migrate dev",
    "docker:prisma:generate": "docker compose run --rm app npx prisma generate",
    "docker:test": "docker compose run --rm app pnpm run test",
    "docker:test:e2e": "docker compose run --rm app pnpm run test:e2e",
    "docker:test:rebuild": "docker compose up --build --force-recreate -d && docker compose run --rm app pnpm run test"
  },
  "dependencies": {
    "@nestjs/common": "^11.0.1",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "^11.0.1",
    "@nestjs/jwt": "^11.0.0",
    "@nestjs/passport": "^11.0.5",
    "@nestjs/platform-express": "^11.0.1",
    "@nestjs/swagger": "^11.1.6",
    "@types/express-rate-limit": "^5.1.3",
    "@types/helmet": "^4.0.0",
    "argon2": "^0.43.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.1",
    "express": "^5.1.0",
    "express-rate-limit": "^7.5.0",
    "helmet": "^8.1.0",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.1",
    "passport-local": "^1.0.0",
    "pg": "^8.15.6",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.1",
    "swagger-ui-express": "^5.0.1",
    "uuid": "^11.1.0",
    "winston": "^3.17.0",
    "winston-daily-rotate-file": "^5.0.0"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.2.0",
    "@eslint/js": "^9.18.0",
    "@nestjs/cli": "^11.0.0",
    "@nestjs/schematics": "^11.0.0",
    "@nestjs/testing": "^11.0.1",
    "@prisma/client": "^6.7.0",
    "@swc/cli": "^0.6.0",
    "@swc/core": "^1.10.7",
    "@types/express": "^5.0.0",
    "@types/jest": "^29.5.14",
    "@types/node": "^22.10.7",
    "@types/passport-jwt": "^4.0.1",
    "@types/passport-local": "^1.0.38",
    "@types/supertest": "^6.0.3",
    "@types/uuid": "^10.0.0",
    "eslint": "^9.18.0",
    "eslint-config-prettier": "^10.0.1",
    "eslint-plugin-prettier": "^5.2.2",
    "globals": "^16.0.0",
    "jest": "^29.7.0",
    "prettier": "^3.4.2",
    "prisma": "^6.7.0",
    "source-map-support": "^0.5.21",
    "supertest": "^7.0.0",
    "ts-jest": "^29.2.5",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.7.3",
    "typescript-eslint": "^8.20.0"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
