#!/bin/bash

# –£–ª—É—á—à–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –º–µ–∂–¥—É –∫–æ–Ω—Ç—É—Ä–∞–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã—Ö .env —Ñ–∞–π–ª–æ–≤
# –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –∫–æ–Ω—Ç—É—Ä—ã: dev, stage, prod

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
print_message() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∞—Ä–≥—É–º–µ–Ω—Ç–∞
if [ $# -ne 1 ]; then
    print_error "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <dev|stage|prod>"
    exit 1
fi

ENV=$1

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞
if [ "$ENV" != "dev" ] && [ "$ENV" != "stage" ] && [ "$ENV" != "prod" ]; then
    print_error "–û—à–∏–±–∫–∞: –¥–æ–ø—É—Å—Ç–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è - dev, stage –∏–ª–∏ prod"
    exit 1
fi

# –ü–∞–ø–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
PROJECT_DIR=$(pwd)

# –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –º–µ–∂–¥—É —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è–º–∏ –∏ –ø–æ–ª–Ω—ã–º–∏ –∏–º–µ–Ω–∞–º–∏
ENV_FULL=""
ENV_FILE=""
COMPOSE_FILE=""

case $ENV in
    "dev")
        ENV_FULL="development"
        ENV_FILE=".env.development"
        COMPOSE_FILE="docker-compose.dev.yml"
        ;;
    "stage")
        ENV_FULL="staging"
        ENV_FILE=".env.staging"
        COMPOSE_FILE="docker-compose.stage.yml"
        ;;
    "prod")
        ENV_FULL="production"
        ENV_FILE=".env.production"
        COMPOSE_FILE="docker-compose.prod.yml"
        ;;
esac

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–æ–≤
if [ ! -f "$ENV_FILE" ]; then
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —à–∞–±–ª–æ–Ω–æ–≤
    if [ -f ".env-templates/$ENV_FILE" ]; then
        print_warning "–§–∞–π–ª $ENV_FILE –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–µ–º –∏–∑ —à–∞–±–ª–æ–Ω–∞."
        cp ".env-templates/$ENV_FILE" "$ENV_FILE"
        print_success "–§–∞–π–ª $ENV_FILE —Å–æ–∑–¥–∞–Ω –∏–∑ —à–∞–±–ª–æ–Ω–∞."
    else
        print_warning "–§–∞–π–ª $ENV_FILE –∏ –µ–≥–æ —à–∞–±–ª–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω—ã."
        print_message "–°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π —Ñ–∞–π–ª $ENV_FILE."
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π .env —Ñ–∞–π–ª
        echo "NODE_ENV=$ENV_FULL" > "$ENV_FILE"
        echo "DATABASE_URL=postgresql://postgres:postgres@db:5432/gprod_${ENV}" >> "$ENV_FILE"
        
        print_warning "–°–æ–∑–¥–∞–Ω –±–∞–∑–æ–≤—ã–π —Ñ–∞–π–ª $ENV_FILE. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç—å –µ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏."
    fi
fi

# –ö–æ–ø–∏—Ä—É–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π .env —Ñ–∞–π–ª –≤ –æ—Å–Ω–æ–≤–Ω–æ–π .env
print_message "–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ $ENV_FILE –≤ .env..."
cp "$ENV_FILE" .env
print_success "–§–∞–π–ª .env –æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è –æ–∫—Ä—É–∂–µ–Ω–∏—è $ENV_FULL."

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
print_message "üì¶ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –≤—Å–µ—Ö –æ–∫—Ä—É–∂–µ–Ω–∏–π..."
docker compose -f docker-compose.dev.yml down 2>/dev/null
docker compose -f docker-compose.stage.yml down 2>/dev/null
docker compose -f docker-compose.prod.yml down 2>/dev/null

# –ó–∞–ø—É—Å–∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
print_message "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º $ENV_FULL –æ–∫—Ä—É–∂–µ–Ω–∏–µ..."
docker compose -f "$COMPOSE_FILE" up -d

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–ø—É—Å–∫–∞
if [ $? -eq 0 ]; then
    print_success "‚úÖ –û–∫—Ä—É–∂–µ–Ω–∏–µ $ENV_FULL —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ"
    
    # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–∞—Ö
    case $ENV in
        "dev")
            print_message "üîó API –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:3000"
            print_message "üîó Adminer –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8080"
            ;;
        "stage")
            print_message "üîó API –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:3003"
            print_message "üîó Prometheus –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:9090"
            print_message "üîó Grafana –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:3100"
            ;;
        "prod")
            print_message "üîó API –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: https://localhost (—á–µ—Ä–µ–∑ Nginx, –ø–æ—Ä—Ç 443)"
            print_message "üîó Grafana –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:3500"
            ;;
    esac
else
    print_error "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –æ–∫—Ä—É–∂–µ–Ω–∏–µ $ENV_FULL"
    exit 1
fi

print_message ""
print_message "üìã –°—Ç–∞—Ç—É—Å –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
docker ps

print_message ""
print_message "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–∫—Ä—É–∂–µ–Ω–∏–µ–º:"
print_message "    - pnpm run docker:$ENV - –∑–∞–ø—É—Å–∫ –æ–∫—Ä—É–∂–µ–Ω–∏—è"
print_message "    - pnpm run docker:$ENV:stop - –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è"
print_message "    - pnpm run docker:$ENV:build - –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –æ–∫—Ä—É–∂–µ–Ω–∏—è" 

print_message ""
print_success "–û–∫—Ä—É–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–æ –Ω–∞ $ENV_FULL" 